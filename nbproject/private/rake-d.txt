about=List versions of all Rails frameworks and the environment
assets\:clean[keep]=Remove old compiled assets
assets\:clobber=Remove compiled assets
assets\:environment=Load asset compile environment
assets\:precompile=Compile all the assets named in config.assets.precompile
cache_digests\:dependencies=Lookup first-level dependencies for TEMPLATE (like messages/show or comments/_comment.html)
cache_digests\:nested_dependencies=Lookup nested dependencies for TEMPLATE (like messages/show or comments/_comment.html)
db\:_dump=
db\:abort_if_pending_migrations=
db\:charset=
db\:collation=
db\:create=Creates the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:create:all to create all databases in the config). Without RAILS_ENV it defaults to creating the development and test databases.
db\:create\:all=
db\:drop=Drops the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:drop:all to drop all databases in the config). Without RAILS_ENV it defaults to dropping the development and test databases.
db\:drop\:all=
db\:fixtures\:identify=
db\:fixtures\:load=Load fixtures into the current environment's database. Load specific fixtures using FIXTURES=x,y. Load from subdirectory in test/fixtures using FIXTURES_DIR=z. Specify an alternative path (eg. spec/fixtures) using FIXTURES_PATH=spec/fixtures.
db\:forward=
db\:load_config=
db\:migrate=Migrate the database (options: VERSION=x, VERBOSE=false, SCOPE=blog).
db\:migrate\:down=
db\:migrate\:redo=
db\:migrate\:reset=
db\:migrate\:status=Display status of migrations
db\:migrate\:up=
db\:purge=
db\:purge\:all=
db\:reset=
db\:rollback=Rolls the schema back to the previous version (specify steps w/ STEP=n).
db\:schema\:cache\:clear=Clear a db/schema_cache.dump file.
db\:schema\:cache\:dump=Create a db/schema_cache.dump file.
db\:schema\:dump=Create a db/schema.rb file that is portable against any DB supported by AR
db\:schema\:load=Load a schema.rb file into the database
db\:schema\:load_if_ruby=
db\:seed=Load the seed data from db/seeds.rb
db\:setup=Create the database, load the schema, and initialize with the seed data (use db:reset to also drop the database first)
db\:structure\:dump=Dump the database structure to db/structure.sql. Specify another file with DB_STRUCTURE=db/my_structure.sql
db\:structure\:load=Recreate the databases from the structure.sql file
db\:structure\:load_if_sql=
db\:test\:clone=
db\:test\:clone_schema=
db\:test\:clone_structure=
db\:test\:deprecated=
db\:test\:load=
db\:test\:load_schema=
db\:test\:load_structure=
db\:test\:prepare=
db\:test\:purge=
db\:version=Retrieves the current schema version number
default=
doc=
doc/app=
doc/app/created.rid=
doc\:app=Generate docs for the app -- also available doc:rails, doc:guides (options: TEMPLATE=/rdoc-template.rb, TITLE="Custom Title")
doc\:clobber=
doc\:clobber_app=
doc\:clobber_rails=
doc\:guides=
doc\:rails=
doc\:reapp=
doc\:rerails=
dropbox\:authorize=Obtains your Dropbox credentials
environment=
html=
html/created.rid=
log\:clear=Truncates all *.log files in log/ to zero bytes (specify which logs with LOGS=test,development)
middleware=Prints out your Rack middleware stack
notes=Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)
notes\:custom=Enumerate a custom annotation, specify with ANNOTATION=CUSTOM
notes\:fixme=
notes\:optimize=
notes\:todo=
paperclip\:clean=Cleans out invalid attachments. Useful after you've added new validations.
paperclip\:refresh=Refreshes both metadata and thumbnails.
paperclip\:refresh\:metadata=Regenerates content_type/size metadata for a given CLASS (and optional ATTACHMENT).
paperclip\:refresh\:missing_styles=Regenerates missing thumbnail styles for all classes using Paperclip.
paperclip\:refresh\:thumbnails=Regenerates thumbnails for a given CLASS (and optional ATTACHMENT and STYLES splitted by comma).
rails\:template=Applies the template supplied by LOCATION=(/path/to/template) or URL
rails\:templates\:copy=
rails\:update=Update configs and some other initially generated files (or use just update:configs or update:bin)
rails\:update\:bin=
rails\:update\:configs=
railties\:install\:migrations=
routes=Print out all defined routes in match order, with names. Target specific controller with CONTROLLER=x.
secret=Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions).
stats=Report code statistics (KLOCs, etc) from the application or engine
test=Runs all tests in test folder
test\:all=Run tests quickly by merging all types and not resetting db
test\:all\:db=Run tests quickly, but also reset db
test\:controllers=
test\:db=Run tests quickly, but also reset db
test\:deprecate_all=
test\:functionals=
test\:generators=
test\:helpers=
test\:integration=
test\:jobs=
test\:mailers=
test\:models=
test\:prepare=
test\:run=
test\:single=
test\:units=
time\:zones\:all=Displays all time zones, also available: time:zones:us, time:zones:local -- filter with OFFSET parameter, e.g., OFFSET=-6
time\:zones\:local=
time\:zones\:us=
tmp=
tmp/cache=
tmp/cache/assets=
tmp/cache/assets/development=
tmp/cache/assets/production=
tmp/cache/assets/test=
tmp/pids=
tmp/sessions=
tmp/sockets=
tmp\:cache\:clear=
tmp\:clear=Clear session, cache, and socket files from tmp/ (narrow w/ tmp:sessions:clear, tmp:cache:clear, tmp:sockets:clear)
tmp\:create=Creates tmp directories for sessions, cache, sockets, and pids
tmp\:pids\:clear=
tmp\:sessions\:clear=
tmp\:sockets\:clear=
